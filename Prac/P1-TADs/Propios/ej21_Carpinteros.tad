TAD CCC
	Igualdad Observacional:
		(∀c1,c2:CCC)(c1 =obs c2 ↔
		(
			maestros(c1) =obs maestros(c2) ∧
			desertores(c1) =obs desertores(c2) ∧
			alumnos(c1) =obs alumnos(c2) ∧
			(∀a:alumno)(
				a ∈ alumnos(c1) ⇒L
				(tutor(a,c1) =obs tutor(a,c2) ∧
				descendientesAcademicos(a,c1) =obs descendientesAcademicos(a,c2) ∧L
				nivel(a,c1) = nivel(a,c2)
				)
			)
		)
	);
	Géneros: CCC
	Exporta: CCC, observadores, generadores, 
	Usa: Bool, Nat
	
	Observadores Básicos:
		maestros: ccc -> conj(miembro)
		desertores: ccc -> conj(miembro)
		alumnos: ccc -> conj(miembro)
		nivel: miembro m x ccc -> nat n {m ∈ alumnos(ccc) ∧ n ≥ 1}
		tutor: miembro m x ccc -> miembro {m ∈ alumnos(ccc)}
	Generadores:
		crearEscuela: conj(miembro) -> ccc 
		nuevoAlumno: miembro m x ccc -> ccc {¬(m ∈ miembros(ccc) ∨ m ∈ desertores(ccc))}
		avanzarNivel: miembro m x ccc -> ccc {m ∈ alumnos(ccc) ∧L nivel(m,ccc) ≤ 9}
		desertar: miembro m x ccc -> ccc {m ∈ alumnos(ccc) ∨ m ∈ maestros(ccc) ⇒ #maestros(ccc)>1}
	Otras Operaciones:
		miembros: ccc -> conj(miembro) // {maestros ∪ alumnos} 
		descendientesAcademicos: miembro m x ccc -> conj(miembro) {m ∈ alumnos(ccc)}
		#maestros: miembro m x ccc -> ℕ
	Axiomas:
		maestros(crearEscuela(cm)) ≡ cm
		maestros(nuevoAlumno(m,ccc)) ≡ maestros(ccc)
		maestros(avanzarNivel(m,ccc)) ≡ maestros(ccc) •
			if nivel(m,ccc) == 9 then
				m
			else
				Ø
			fi
		maestros(desertar(m,ccc)) ≡ maestros(ccc) - {m}
		
		
		...
Fin TAD


10 niveles, 

arranca con conj de maestros (nivel(maestros)=10)
ingresantes: 
	- arrancan nivel 1 
	- son asignados a un tutor (tutores pueden estar en cualquier nivel, salvo el 1)
	- al superar el nivel de su tutor son asignados a uno nuevo de mayor nivel
		- esto ultimo vale para todos los niveles salvo si pasan al 10, donde entra al conj de maestros
desertores:
	- al desertar, los alumnos de un tutor pasan a los de su propio tutor
